{"version":3,"file":"PresentationTool-RHg-OvHD.cjs","sources":["../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js","../../../channels/src/constants.ts","../../../channels/src/helpers.ts","../../../channels/src/controller.ts","../../../visual-editing-helpers/dist/_chunks/urlStringToPath-FefM00gz.js","../../../visual-editing-helpers/dist/index.js","../../src/components/ErrorCard.tsx","../../src/usePresentationTool.ts","../../src/editor/PresentationPaneRouterProvider.tsx","../../src/editor/DocumentListPane.tsx","../../src/editor/DocumentListPanel.tsx","../../src/editor/DocumentPane.tsx","../../src/editor/DocumentPanel.tsx","../../src/editor/ContentEditor.tsx","../../../visual-editing-helpers/dist/hooks.js","../../src/loader/context.tsx","../../src/loader/turboChargeResultIfSourceMap.tsx","../../src/loader/utils.ts","../../src/loader/LiveStoreProvider.tsx","../../src/loader/useLiveQuery.ts","../../src/loader/LoaderQueries.tsx","../../src/panels/PanelsContext.tsx","../../src/panels/Panel.tsx","../../src/panels/PanelResizer.tsx","../../src/panels/usePanelId.ts","../../src/lib/debounce.ts","../../src/panels/usePanelsStorage.ts","../../src/panels/util.ts","../../src/panels/Panels.tsx","../../src/perf/HoldEditState.tsx","../../src/PresentationNavigateProvider.tsx","../../src/PresentationParamsProvider.tsx","../../src/PresentationProvider.tsx","../../src/preview/IFrame.tsx","../../src/preview/PreviewLocationInput.tsx","../../src/preview/PreviewFrame.tsx","../../src/parsePath.ts","../../src/useParams.ts","../../src/usePreviewUrl.ts","../../src/PresentationTool.tsx","../../src/useDocumentsOnPage.ts","../../src/useLocalState.ts"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import type { ChannelMsgType } from './types'\n\nexport const RESPONSE_TIMEOUT = 1000\nexport const HEARTBEAT_INTERVAL = 1000\nexport const HANDSHAKE_INTERVAL = 500\n\nexport const INTERNAL_MSG_TYPES = [\n  'channel/disconnect',\n  'channel/response',\n  'channel/heartbeat',\n] satisfies ChannelMsgType[]\n\nexport const HANDSHAKE_MSG_TYPES = [\n  'handshake/syn',\n  'handshake/syn-ack',\n  'handshake/ack',\n] satisfies ChannelMsgType[]\n","import { HANDSHAKE_MSG_TYPES, INTERNAL_MSG_TYPES } from './constants'\nimport { ChannelMsgType, HandshakeMsgType, InternalMsgType } from './types'\n\nexport const isInternalMessage = (\n  type: ChannelMsgType | InternalMsgType,\n): type is InternalMsgType => {\n  return INTERNAL_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isHandshakeMessage = (\n  type: ChannelMsgType | InternalMsgType,\n): type is HandshakeMsgType => {\n  return HANDSHAKE_MSG_TYPES.some((t) => t === type)\n}\n","import { v4 as uuid } from 'uuid'\n\nimport {\n  HANDSHAKE_INTERVAL,\n  HEARTBEAT_INTERVAL,\n  RESPONSE_TIMEOUT,\n} from './constants'\nimport { isHandshakeMessage } from './helpers'\nimport type {\n  ChannelMsg,\n  ChannelsController,\n  ChannelsControllerChannel,\n  ChannelsControllerOptions,\n  ChannelStatus,\n  InternalMsgType,\n  ProtocolMsg,\n  ToArgs,\n} from './types'\n\nexport function createChannelsController<T extends ChannelMsg>(\n  config: ChannelsControllerOptions<T>,\n): ChannelsController {\n  const iframe = config.frame.contentWindow\n\n  const channels: ChannelsControllerChannel<T>[] = config.connectTo.map(\n    (config) => ({\n      buffer: [],\n      config,\n      id: '',\n      handler: handshakeHandler,\n      status: 'connecting',\n      interval: undefined,\n      heartbeat: undefined,\n    }),\n  )\n\n  function startHandshake(channel: ChannelsControllerChannel<T>) {\n    channel.id = uuid()\n    channel.interval = window.setInterval(() => {\n      sendHandshake(channel, 'handshake/syn', { id: channel.id })\n    }, HANDSHAKE_INTERVAL)\n  }\n\n  function stopHandshake(channel: ChannelsControllerChannel<T>) {\n    window.clearInterval(channel.interval)\n  }\n\n  function isValidMessageEvent(\n    e: MessageEvent,\n  ): e is MessageEvent<ProtocolMsg<T>> {\n    const { data, origin } = e\n    return (\n      data.domain === 'sanity/channels' &&\n      data.to == config.id &&\n      channels.map((channel) => channel.config.id).includes(data.from) &&\n      data.type !== 'channel/response' &&\n      origin === config.frameOrigin\n    )\n  }\n\n  function handshakeHandler(e: MessageEvent<ProtocolMsg<T>>) {\n    const { data } = e\n    if (isHandshakeMessage(data.type)) {\n      const channel = channels.find(\n        (channel) => channel.config.id === data.from,\n      )\n      if (channel && data.type === 'handshake/syn-ack') {\n        setChannelStatus(channel, 'connected')\n        sendHandshake(channel, 'handshake/ack', { id: channel.id })\n      }\n    }\n  }\n\n  const messageHandler = (e: MessageEvent<ProtocolMsg<T>>) => {\n    const { data } = e\n    if (\n      !isHandshakeMessage(data.type) &&\n      channels.find((channel) => channel.id === data.connectionId)\n    ) {\n      const channel = channels.find(\n        (channel) => channel.config.id === data.from,\n      )\n      if (channel) {\n        // eslint-disable-next-line no-warning-comments\n        // @todo Ugly type casting\n        const args = [data.type, data.data] as ToArgs<T>\n        channel.config.onEvent?.(...args)\n        config.onEvent?.(...args)\n        send(channel, 'channel/response', { responseTo: data.id }, false)\n      }\n    }\n  }\n\n  function handleEvents(e: MessageEvent<ProtocolMsg<T>>) {\n    if (isValidMessageEvent(e)) {\n      const { data } = e\n      channels.find((channel) => channel.config.id === data.from)?.handler(e)\n    }\n  }\n\n  function flush(channel: ChannelsControllerChannel<T>) {\n    const toFlush = [...channel.buffer]\n    channel.buffer.splice(0, channel.buffer.length)\n    toFlush.forEach(({ type, data }) => {\n      send(channel, type, data)\n    })\n  }\n\n  function startHeartbeat(channel: ChannelsControllerChannel<T>) {\n    stopHeartbeat(channel)\n    if (channel.config.heartbeat) {\n      const heartbeatInverval =\n        typeof channel.config.heartbeat === 'number'\n          ? channel.config.heartbeat\n          : HEARTBEAT_INTERVAL\n      channel.heartbeat = window.setInterval(() => {\n        send(channel, 'channel/heartbeat')\n      }, heartbeatInverval)\n    }\n  }\n\n  function stopHeartbeat(channel: ChannelsControllerChannel<T>) {\n    if (channel.heartbeat) {\n      window.clearInterval(channel.heartbeat)\n    }\n  }\n\n  function setChannelStatus(\n    channel: ChannelsControllerChannel<T>,\n    next: ChannelStatus,\n  ) {\n    channel.status = next\n    channel.config.onStatusUpdate?.(next, channel.config.id)\n    config.onStatusUpdate?.(next, channel.config.id)\n    if (next === 'connecting' || next === 'reconnecting') {\n      channel.handler = handshakeHandler\n      stopHeartbeat(channel)\n      startHandshake(channel)\n    } else if (next === 'connected') {\n      channel.handler = messageHandler\n      stopHandshake(channel)\n      startHeartbeat(channel)\n      flush(channel)\n    } else if (next === 'disconnected') {\n      channel.id = null\n      channel.handler = handshakeHandler\n      stopHandshake(channel)\n      stopHeartbeat(channel)\n    }\n  }\n\n  function sendHandshake<K extends T['type']>(\n    channel: ChannelsControllerChannel<T>,\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    if (!channel.id) {\n      throw new Error('No channel ID set')\n    }\n\n    const msg: ProtocolMsg<T> = {\n      connectionId: channel.id,\n      data,\n      domain: 'sanity/channels',\n      from: config.id,\n      id: uuid(),\n      to: channel.config.id,\n      type,\n    }\n\n    try {\n      iframe?.postMessage(msg, { targetOrigin: '*' })\n    } catch (e) {\n      throw new Error(`Failed to postMessage '${msg.id}' on '${config.id}'`)\n    }\n  }\n\n  function send<K extends T['type']>(\n    channel: ChannelsControllerChannel<T>,\n    type: K | InternalMsgType,\n    data?: Extract<T, { type: K }>['data'],\n    expectResponse = true,\n  ) {\n    const id = uuid()\n\n    // If there is no active channel, push to the buffer\n    if (\n      channel.status === 'connecting' ||\n      channel.status === 'reconnecting' ||\n      channel.status === 'disconnected'\n    ) {\n      channel.buffer.push({ type, data })\n      return\n    }\n\n    if (!channel.id) {\n      throw new Error('No channel ID set')\n    }\n\n    const msg: ProtocolMsg<T> = {\n      connectionId: channel.id,\n      data,\n      domain: 'sanity/channels',\n      from: config.id,\n      id,\n      to: channel.config.id,\n      type,\n    }\n\n    if (expectResponse) {\n      const maxWait = setTimeout(() => {\n        // The channel may have changed, so only reject if the IDs match\n        if (msg.connectionId === channel.id) {\n          // Cleanup the transaction listener\n          window.removeEventListener('message', transact, false)\n          // Push the message to the buffer\n          if (type !== 'channel/heartbeat') {\n            channel.buffer.push({ type, data })\n          }\n          // Try to reconnect\n          setChannelStatus(channel, 'reconnecting')\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Received no response to message '${msg.type}' on client '${config.id}' (ID: '${msg.id}').`,\n          )\n        }\n      }, RESPONSE_TIMEOUT)\n\n      const transact = (e: MessageEvent<ChannelMsg>) => {\n        const { data: eventData } = e\n        if (\n          eventData.type === 'channel/response' &&\n          eventData.data?.responseTo &&\n          eventData.data.responseTo === msg.id\n        ) {\n          window.removeEventListener('message', transact, false)\n          clearTimeout(maxWait)\n        }\n      }\n      window.addEventListener('message', transact, false)\n    }\n\n    try {\n      iframe?.postMessage(msg, { targetOrigin: config.frameOrigin })\n    } catch (e) {\n      throw new Error(\n        `Failed to postMessage '${msg.id}' on client '${config.id}'`,\n      )\n    }\n  }\n\n  function disconnect() {\n    channels.forEach((channel) => {\n      if (['disconnected'].includes(channel.status)) return\n      send(channel, 'channel/disconnect', { id: channel.id }, false)\n      setChannelStatus(channel, 'disconnected')\n    })\n  }\n\n  function destroy() {\n    disconnect()\n    window.removeEventListener('message', handleEvents, false)\n    channels.forEach((channel) => {\n      stopHeartbeat(channel)\n      stopHandshake(channel)\n    })\n  }\n\n  function initialise() {\n    window.addEventListener('message', handleEvents, false)\n    channels.forEach((channel) => {\n      setChannelStatus(channel, 'connecting')\n    })\n  }\n\n  initialise()\n\n  function sendPublic<K extends T['type']>(\n    id: string | string[] | undefined,\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    const channelsToSend = id ? (Array.isArray(id) ? [...id] : [id]) : channels\n\n    channelsToSend.forEach((id) => {\n      const channel = channels.find((channel) => channel.config.id === id)\n      if (!channel) throw new Error('Invalid channel ID')\n      send(channel, type, data)\n    })\n  }\n\n  return {\n    destroy,\n    send: sendPublic,\n  }\n}\n","function n(n){return\"object\"==typeof n&&null!==n&&!Array.isArray(n)}function e(n){return null!==n&&Array.isArray(n)}function t(n){let t=\"\";for(const r of n)\"string\"!=typeof r?\"number\"!=typeof r?e(r)?(t&&(t+=\":\"),t+=`${r.join(\",\")}}`):r._key&&(t&&(t+=\":\"),t+=`${r._key}`):(t&&(t+=\":\"),t+=`${r}`):(t&&(t+=\".\"),t+=r);return t}const r=/^([A-Za-z]+):([0-9]+)$/,o=/^([A-Za-z]+):([0-9]+),([0-9]+)$/,u=/^([A-Za-z]+):([a-z0-9]+)$/;function s(n){const e=[];for(const t of n.split(\".\")){const n=r.exec(t);if(n){e.push(n[1],Number(n[2]));continue}const s=o.exec(t);if(s){e.push(s[1],[Number(s[2]),Number(s[3])]);continue}const c=u.exec(t);c?e.push(c[1],{_key:c[2]}):e.push(t)}return e}export{e as a,n as i,t as p,s as u};//# sourceMappingURL=urlStringToPath-FefM00gz.js.map\n","export{p as pathToUrlString,u as urlStringToPath}from\"./_chunks/urlStringToPath-FefM00gz.js\";function t(t,r){return`${t}-${\"string\"==typeof r?r:JSON.stringify(r)}`}const r=\"undefined\"!=typeof window&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform),e={alt:\"altKey\",ctrl:\"ctrlKey\",mod:r?\"metaKey\":\"ctrlKey\",shift:\"shiftKey\"};function n(t,r){return t.every((t=>e[t]?r[e[t]]:r.key===t.toUpperCase()))}function o(t){return t.key===(r?\"Meta\":\"Ctrl\")}function i(t){return\"Alt\"===t.key}export{t as getQueryCacheKey,i as isAltKey,n as isHotkey,o as isModKey};//# sourceMappingURL=index.js.map\n","import {\n  Box,\n  Button,\n  Card,\n  CardProps,\n  Container,\n  Flex,\n  Inline,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport { ReactElement, ReactNode } from 'react'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): ReactElement {\n  const { children, message, onRetry, onContinueAnyway, ...restProps } = props\n\n  const retryButton = (\n    <Button fontSize={1} mode=\"ghost\" onClick={onRetry} text=\"Retry\" />\n  )\n  const continueAnywayButton = (\n    <Button\n      fontSize={1}\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text=\"Continue anyway\"\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                An error occured\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import { useContext } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\n\nexport function usePresentationTool(): PresentationContextValue {\n  const presentation = useContext(PresentationContext)\n\n  if (!presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","/* eslint-disable no-console */\n\nimport {\n  forwardRef,\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useMemo,\n} from 'react'\nimport { getPublishedId, useUnique } from 'sanity'\nimport {\n  BackLinkProps,\n  PaneRouterContext,\n  PaneRouterContextValue,\n  ReferenceChildLinkProps,\n} from 'sanity/desk'\nimport { StateLink, useRouter } from 'sanity/router'\n\nimport { DeskDocumentPaneParams, PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(\n  nextParams: Record<string, string | undefined>,\n) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return { ...obj, [key]: value }\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { deskParams, params } = usePresentationTool()\n\n  return (\n    <StateLink\n      {...props}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries({\n          ...deskParams,\n          preview: params.preview,\n        }),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { documentId, documentType, ...restProps } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{ path: documentId, type: documentType }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onDeskParams: (params: DeskDocumentPaneParams) => void\n    params: DeskDocumentPaneParams\n    previewUrl?: string\n    refs?: { _id: string; _type: string }[]\n  }>,\n): ReactElement {\n  const { children, params, onDeskParams, previewUrl, refs } = props\n\n  const { state: routerState, resolvePathFromState } = useRouter()\n\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] =\n    useCallback(\n      (nextParams) => {\n        const path = resolvePathFromState(routerState)\n        const qs = resolveQueryStringFromParams({\n          ...routerSearchParams,\n          ...nextParams,\n        })\n        return `${path}${qs}`\n      },\n      [resolvePathFromState, routerSearchParams, routerState],\n    )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      params: params as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const { childId, ...restProps } = childLinkProps\n        const ref = refs?.find((r) => getPublishedId(r._id) === childId)\n\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                path: ref._id,\n                type: ref._type,\n                _searchParams: Object.entries({ preview: previewUrl }),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink,\n      ReferenceChildLink,\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        onDeskParams({\n          ...nextParams,\n          // eslint-disable-next-line no-warning-comments\n          // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n          inspect: nextParams.inspect ?? undefined,\n        } as DeskDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onDeskParams, params, previewUrl, refs])\n\n  return (\n    <PaneRouterContext.Provider value={context}>\n      {children}\n    </PaneRouterContext.Provider>\n  )\n}\n","import { Card, Code, ErrorBoundary, Flex, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport {\n  DeskToolProvider,\n  DocumentListPane as DeskDocumentListPane,\n  PaneLayout,\n  PaneNode,\n} from 'sanity/desk'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n  const { devMode } = usePresentationTool()\n\n  const pane: Extract<PaneNode, { type: 'documentList' }> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: { ids: refs.map((r) => r._id) },\n      },\n      schemaTypeName: '',\n      title: 'Documents on this page',\n      type: 'documentList',\n    }),\n    [refs],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const deskParams = useMemo(() => ({}), [])\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document list\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <DeskToolProvider>\n          <PresentationPaneRouterProvider\n            params={deskParams}\n            onDeskParams={onDeskParams}\n            previewUrl={previewUrl}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <DeskDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </DeskToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import { ReactElement } from 'react'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPane } from './DocumentListPane'\n\nexport function DocumentListPanel(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n\n  return (\n    <DocumentListPane\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refs}\n    />\n  )\n}\n","import { Card, Code, ErrorBoundary, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { Path } from 'sanity'\nimport {\n  DocumentPane as DeskDocumentPane,\n  DocumentPaneNode,\n  PaneLayout,\n  useDeskTool,\n} from 'sanity/desk'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  params: DeskDocumentPaneParams\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n}): ReactElement {\n  const { documentId, documentType, params, onDeskParams, onFocusPath } = props\n  const { devMode } = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, params])\n\n  const { setLayoutCollapsed } = useDeskTool()\n  const handleRootCollapse = useCallback(\n    () => setLayoutCollapsed(true),\n    [setLayoutCollapsed],\n  )\n  const handleRootExpand = useCallback(\n    () => setLayoutCollapsed(false),\n    [setLayoutCollapsed],\n  )\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document editor\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout\n        style={{ height: '100%' }}\n        onExpand={handleRootExpand}\n        onCollapse={handleRootCollapse}\n      >\n        <PresentationPaneRouterProvider\n          onDeskParams={onDeskParams}\n          params={params}\n        >\n          <DeskDocumentPane\n            paneKey=\"document\"\n            index={1}\n            itemId=\"document\"\n            pane={paneDocumentNode}\n            onFocusPath={onFocusPath}\n          />\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import { ReactElement, useCallback, useEffect } from 'react'\nimport { Path, SanityDocument, useEditState } from 'sanity'\nimport { DeskToolProvider } from 'sanity/desk'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentPane } from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId: string\n  documentType: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (documentId: string, path: Path) => void\n  onDocumentChange: (document: SanityDocument | null) => void\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    onDocumentChange,\n  } = props\n\n  const editState = useEditState(documentId, documentType)\n  const documentValue = editState.draft || editState.published\n\n  // Sync changes to the document being edited back up to the live loaders\n  useEffect(\n    () => onDocumentChange(documentValue),\n    [documentValue, onDocumentChange],\n  )\n\n  const handleFocusPath = useCallback(\n    (path: Path) => {\n      if (documentValue?._id) {\n        onFocusPath(documentValue._id, path)\n      }\n    },\n    [documentValue, onFocusPath],\n  )\n\n  return (\n    <DeskToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        params={deskParams}\n        onDeskParams={onDeskParams}\n        onFocusPath={handleFocusPath}\n      />\n    </DeskToolProvider>\n  )\n}\n","import { ReactElement } from 'react'\nimport { Path, SanityDocument } from 'sanity'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPanel } from './DocumentListPanel'\nimport { DocumentPanel } from './DocumentPanel'\n\nexport function ContentEditor(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId?: string\n  documentType?: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (documentId: string, path: Path) => void\n  onDocumentChange: (document: SanityDocument | null) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    onDocumentChange,\n    previewUrl,\n    refs,\n  } = props\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        deskParams={deskParams}\n        documentId={documentId}\n        documentType={documentType}\n        onDeskParams={onDeskParams}\n        onFocusPath={onFocusPath}\n        onDocumentChange={onDocumentChange}\n      />\n    )\n  }\n\n  return (\n    <DocumentListPanel\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refs}\n    />\n  )\n}\n","import{useMemo as e,useState as n,useCallback as t,useEffect as i,useSyncExternalStore as r}from\"react\";function o(n){const t=e((()=>JSON.stringify(n||{})),[n]);return e((()=>JSON.parse(t)),[t])}function s(e){const{refreshInterval:o}=e,s=function(){const[e,t]=n(!1);i((()=>{t(navigator.onLine);const e=()=>t(!0),n=()=>t(!1);return window.addEventListener(\"online\",e),window.addEventListener(\"offline\",n),()=>{window.removeEventListener(\"online\",e),window.removeEventListener(\"offline\",n)}}),[]);const o=r(u,(()=>document.visibilityState),(()=>\"hidden\"));if(!e)return!0;if(\"hidden\"===o)return!0;return!1}(),[d,c]=n(\"hit\"),f=t((()=>(c(\"inflight\"),()=>c(\"hit\"))),[]);return i((()=>{if(!o||\"hit\"!==d)return;const e=setTimeout((()=>c(\"stale\")),o);return()=>clearTimeout(e)}),[o,d]),i((()=>{if(\"hit\"!==d)return;const e=()=>c(\"stale\");return window.addEventListener(\"focus\",e),()=>window.removeEventListener(\"focus\",e)}),[o,d]),i((()=>{s&&\"hit\"===d&&c(\"stale\"),s||\"stale\"!==d||c(\"refresh\")}),[s,d]),[d,f]}function u(e){return document.addEventListener(\"visibilitychange\",e),()=>document.removeEventListener(\"visibilitychange\",e)}export{o as useQueryParams,s as useRevalidate};//# sourceMappingURL=hooks.js.map\n","import { createContext } from 'react'\n\nimport { DefineListenerContext } from './types'\nimport { QueryCacheKey } from './utils'\n\n/**\n * @internal\n */\nexport const defineListenerContext =\n  createContext<DefineListenerContext | null>(null)\n\n/**\n * If it's `null` then the listener should be treated as `success`, otherwise if a listener isn't in the array it should be considered as `loading`\n * @internal\n */\nexport const LoadedListenersContext = createContext<QueryCacheKey[] | null>(\n  null,\n)\n\n/**\n * Aids in debugging, notifying if the parent has a GroqStoreProvider, or a LiveStoreProvider, and is thus `live`.\n * This is helpful as the `useLiveQuery` hook itself works even if no provider is present, but it will not be `live`.\n * @internal\n */\nexport const IsEnabledContext = createContext<boolean>(false)\n","import type {\n  ClientPerspective,\n  ContentSourceMap,\n  SanityDocument,\n} from '@sanity/client'\nimport { applySourceDocuments } from '@sanity/client/csm'\nimport {\n  unstable__documentsCache,\n  unstable__getDocumentCacheKey,\n} from '@sanity/groq-store'\n\nlet warnedAboutCrossDatasetReference = false\n\nexport function turboChargeResultIfSourceMap(\n  liveDocument: SanityDocument | null,\n  projectId: string,\n  dataset: string,\n  result: unknown,\n  perspective: ClientPerspective,\n  resultSourceMap?: ContentSourceMap,\n): any {\n  if (perspective === 'raw') {\n    throw new Error(\n      'turboChargeResultIfSourceMap does not support raw perspective',\n    )\n  }\n  return applySourceDocuments(result, resultSourceMap, (sourceDocument) => {\n    if (sourceDocument._projectId) {\n      // @TODO Handle cross dataset references\n      if (!warnedAboutCrossDatasetReference) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Cross dataset references are not supported yet, ignoring source document',\n          sourceDocument,\n        )\n        warnedAboutCrossDatasetReference = true\n      }\n      return undefined\n    }\n    // If the draft matches, use that as it's the most up to date\n    if (\n      liveDocument?._id === sourceDocument._id &&\n      liveDocument?._type === sourceDocument._type\n    ) {\n      return liveDocument\n    }\n    // Fallback to general documents cache\n    const key = unstable__getDocumentCacheKey(\n      { projectId, dataset, perspective },\n      sourceDocument,\n    )\n    return unstable__documentsCache.get(key)\n  })\n}\n","import type { ClientPerspective, QueryParams } from '@sanity/client'\n\n/**\n * @internal\n */\nexport type QueryCacheKey = `${ClientPerspective}-${string}-${string}`\n/**\n * @internal\n */\nexport function getQueryCacheKey(\n  perspective: ClientPerspective,\n  query: string,\n  params: QueryParams,\n): QueryCacheKey {\n  return `${perspective}-${query}-${JSON.stringify(params)}`\n}\n","import type {\n  ClientConfig,\n  ClientPerspective,\n  ContentSourceMap,\n  QueryParams,\n  SanityClient,\n  SanityDocument,\n} from '@sanity/client'\nimport {\n  DocumentCachePerspective,\n  unstable__documentsCache,\n  unstable__getDocumentCacheKey,\n} from '@sanity/groq-store'\nimport { useRevalidate } from '@sanity/visual-editing-helpers/hooks'\nimport { applyPatch } from 'mendoza'\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react'\n\nimport { defineListenerContext as Context, IsEnabledContext } from './context'\nimport { turboChargeResultIfSourceMap } from './turboChargeResultIfSourceMap'\nimport type {\n  DefineListenerContext,\n  ListenerGetSnapshot,\n  ListenerSubscribe,\n  Logger,\n} from './types'\nimport { getQueryCacheKey, type QueryCacheKey } from './utils'\n\nexport type { Logger }\n\n/**\n * @internal\n */\nexport interface LiveStoreProviderProps {\n  children: React.ReactNode\n  /**\n   * The Sanity client to use for fetching data and listening to mutations.\n   */\n  client: SanityClient\n  /**\n   * How frequently queries should be refetched in the background to refresh the parts of queries that can't be source mapped.\n   * Setting it to `0` will disable background refresh.\n   * @defaultValue 10000\n   */\n  refreshInterval?: number\n  perspective: ClientPerspective\n  liveDocument: SanityDocument | null\n}\n/**\n * @internal\n */\nconst LiveStoreProvider = memo(function LiveStoreProvider(\n  props: LiveStoreProviderProps,\n) {\n  const {\n    liveDocument,\n    children,\n    client,\n    refreshInterval = 2000,\n    perspective,\n  } = props\n  if (perspective === 'raw') {\n    throw new Error('LiveStoreProvider does not support the raw perspective')\n  }\n\n  const [subscriptions, setSubscriptions] = useState<QueryCacheKey[]>([])\n  const [snapshots] = useState<QuerySnapshotsCache>(() => new Map())\n  const hooks = useHooks(setSubscriptions)\n  const [context] = useState<DefineListenerContext>(() => {\n    return function defineListener<QueryResult>(\n      initialSnapshot: QueryResult,\n      query: string,\n      params: QueryParams,\n    ) {\n      const key = getQueryCacheKey(perspective, query, params)\n\n      const subscribe: ListenerSubscribe = (onStoreChange) => {\n        const unsubscribe = hooks.subscribe(\n          key,\n          perspective,\n          query,\n          params,\n          onStoreChange,\n        )\n\n        return () => unsubscribe()\n      }\n      const getSnapshot: ListenerGetSnapshot<{\n        result: QueryResult\n        resultSourceMap?: ContentSourceMap\n      }> = () =>\n        snapshots.get(key) as unknown as {\n          result: QueryResult\n          resultSourceMap?: ContentSourceMap\n        }\n\n      return { subscribe, getSnapshot }\n    } satisfies DefineListenerContext\n  })\n  const [turboIds, setTurboIds] = useState<string[]>([])\n  const turboIdsFromSourceMap = useCallback(\n    (contentSourceMap: ContentSourceMap) => {\n      // This handler only adds ids, on each query fetch. But that's ok since <Turbo /> purges ids that are unused\n      const nextTurboIds = new Set<string>()\n      if (contentSourceMap.documents?.length) {\n        for (const { _id } of contentSourceMap.documents) {\n          // @TODO only add local ids, not remote ones\n          nextTurboIds.add(_id)\n        }\n      }\n      setTurboIds((prevTurboIds) => {\n        const mergedTurboIds = Array.from(\n          new Set([...prevTurboIds, ...nextTurboIds]),\n        )\n        if (\n          JSON.stringify(mergedTurboIds.sort()) ===\n          JSON.stringify(prevTurboIds.sort())\n        ) {\n          return prevTurboIds\n        }\n        return mergedTurboIds\n      })\n    },\n    [],\n  )\n\n  return (\n    <Context.Provider value={context}>\n      <IsEnabledContext.Provider value>{children}</IsEnabledContext.Provider>\n      <Turbo\n        liveDocument={liveDocument}\n        cache={hooks.cache}\n        client={client}\n        setTurboIds={setTurboIds}\n        snapshots={snapshots}\n        turboIds={turboIds}\n        perspective={perspective}\n      />\n      {subscriptions.map((key) => {\n        if (!hooks.cache.has(key)) return null\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const { query, params, listeners } = hooks.cache.get(key)!\n        return (\n          <QuerySubscription\n            key={key}\n            liveDocument={liveDocument}\n            client={client}\n            listeners={listeners}\n            params={params}\n            query={query}\n            refreshInterval={refreshInterval}\n            snapshots={snapshots}\n            turboIdsFromSourceMap={turboIdsFromSourceMap}\n            perspective={perspective}\n          />\n        )\n      })}\n    </Context.Provider>\n  )\n})\nLiveStoreProvider.displayName = 'LiveStoreProvider'\nexport default LiveStoreProvider\n\ninterface QuerySubscriptionProps\n  extends Required<Pick<LiveStoreProviderProps, 'client' | 'refreshInterval'>> {\n  liveDocument: SanityDocument | null\n  query: string\n  params: QueryParams\n  listeners: Set<() => void>\n  turboIdsFromSourceMap: (contentSourceMap: ContentSourceMap) => void\n  snapshots: QuerySnapshotsCache\n  perspective: ClientPerspective\n}\nconst QuerySubscription = memo(function QuerySubscription(\n  props: QuerySubscriptionProps,\n) {\n  const {\n    liveDocument,\n    client,\n    refreshInterval,\n    query,\n    params,\n    listeners,\n    snapshots,\n    turboIdsFromSourceMap,\n    perspective,\n  } = props\n  const { projectId, dataset } = useMemo(() => {\n    const { projectId, dataset } = client.config()\n    return { projectId, dataset } as Required<\n      Pick<ClientConfig, 'projectId' | 'dataset'>\n    >\n  }, [client])\n\n  // Make sure any async errors bubble up to the nearest error boundary\n  const [error, setError] = useState<unknown>(null)\n  if (error) throw error\n\n  const [revalidate, startRefresh] = useRevalidate({ refreshInterval })\n  const shouldRefetch = revalidate === 'refresh' || revalidate === 'inflight'\n  useEffect(() => {\n    if (!shouldRefetch) {\n      return\n    }\n\n    let fulfilled = false\n    const controller = new AbortController()\n    // eslint-disable-next-line no-inner-declarations\n    async function effect() {\n      const { signal } = controller\n      const { result, resultSourceMap } = await client.fetch(query, params, {\n        tag: 'presentation-loader',\n        signal,\n        perspective,\n        filterResponse: false,\n      })\n\n      if (!signal.aborted) {\n        snapshots.set(getQueryCacheKey(perspective, query, params), {\n          result: resultSourceMap\n            ? turboChargeResultIfSourceMap(\n                liveDocument,\n                projectId,\n                dataset,\n                result,\n                perspective,\n                resultSourceMap,\n              )\n            : result,\n          resultSourceMap,\n        })\n\n        if (resultSourceMap) {\n          turboIdsFromSourceMap(resultSourceMap)\n        }\n\n        // Notify listeners that snapshots are updated\n        for (const listener of listeners.values()) {\n          listener()\n        }\n        fulfilled = true\n      }\n    }\n    const onFinally = startRefresh()\n    effect()\n      .catch((error) => {\n        if (error.name !== 'AbortError') {\n          setError(error)\n        }\n      })\n      .finally(onFinally)\n    return () => {\n      if (!fulfilled) {\n        controller.abort()\n      }\n    }\n  }, [\n    liveDocument,\n    client,\n    dataset,\n    listeners,\n    params,\n    projectId,\n    query,\n    shouldRefetch,\n    snapshots,\n    startRefresh,\n    turboIdsFromSourceMap,\n    perspective,\n  ])\n\n  return null\n})\nQuerySubscription.displayName = 'QuerySubscription'\n\ntype QuerySnapshotsCache = Map<\n  QueryCacheKey,\n  { result: unknown; resultSourceMap?: ContentSourceMap }\n>\n\ntype LiveStoreQueryCacheMap = Map<\n  QueryCacheKey,\n  {\n    query: string\n    params: QueryParams\n    perspective: ClientPerspective\n    listeners: Set<() => void>\n  }\n>\n\n/**\n * Keeps track of store subscribers per cache key, in a way that's designed for useSyncExternalStore.\n * The main difference from a typical subscription state with useEffect is that `adding` and `cleanup`\n * is wholly managed by the `subscribe` function in `useSyncExternalStore`, instead of lifecycles in useEffect.\n * And since the `onStoreChange` callback, provided to `subscribe`, notifies React when to re-render,\n * there is no need to use `setState` to trigger a re-render. That's why the Map is persisted in `useState` but the state setter isn't used.\n */\nfunction useHooks(\n  setSubscriptions: React.Dispatch<React.SetStateAction<QueryCacheKey[]>>,\n): {\n  cache: LiveStoreQueryCacheMap\n  subscribe: (\n    key: QueryCacheKey,\n    perspective: ClientPerspective,\n    query: string,\n    params: QueryParams,\n    listener: () => void,\n  ) => () => void\n} {\n  const [cache] = useState<LiveStoreQueryCacheMap>(() => new Map())\n  const subscribe = useCallback(\n    (\n      key: QueryCacheKey,\n      perspective: ClientPerspective,\n      query: string,\n      params: QueryParams,\n      listener: () => void,\n    ) => {\n      if (!cache.has(key)) {\n        cache.set(key, {\n          perspective,\n          query,\n          params,\n          listeners: new Set<() => void>(),\n        })\n        setSubscriptions((prevSubscriptions) => {\n          if (prevSubscriptions.includes(key)) {\n            return prevSubscriptions\n          }\n          return [...prevSubscriptions, key]\n        })\n      }\n      const hook = cache.get(key)\n      if (!hook || !hook.listeners) {\n        throw new TypeError('Inconsistent cache for key: ' + key)\n      }\n      const { listeners } = hook\n      listeners.add(listener)\n      return () => {\n        listeners.delete(listener)\n        if (listeners.size === 0) {\n          cache.delete(key)\n          setSubscriptions((prevSubscriptions) => {\n            if (prevSubscriptions.includes(key)) {\n              return prevSubscriptions.filter((sub) => sub !== key)\n            }\n            return prevSubscriptions\n          })\n        }\n      }\n    },\n    [cache, setSubscriptions],\n  )\n  return useMemo(() => ({ cache, subscribe }), [cache, subscribe])\n}\n\ninterface TurboProps extends Pick<LiveStoreProviderProps, 'client'> {\n  liveDocument: SanityDocument | null\n  turboIds: string[]\n  setTurboIds: React.Dispatch<React.SetStateAction<string[]>>\n  cache: LiveStoreQueryCacheMap\n  snapshots: QuerySnapshotsCache\n  perspective: DocumentCachePerspective\n}\n/**\n * A turbo-charged mutation observer that uses Content Source Maps to apply mendoza patches on your queries\n */\nconst Turbo = memo(function Turbo(props: TurboProps) {\n  const {\n    liveDocument,\n    client,\n    snapshots,\n    cache,\n    turboIds,\n    setTurboIds,\n    perspective,\n  } = props\n  const { projectId, dataset } = useMemo(() => {\n    const { projectId, dataset } = client.config()\n    return { projectId, dataset } as Required<\n      Pick<ClientConfig, 'projectId' | 'dataset'>\n    >\n  }, [client])\n\n  // Keep track of document ids that the active `useLiveQuery` hooks care about\n  useEffect(() => {\n    const nextTurboIds = new Set<string>()\n    for (const { perspective, query, params } of cache.values()) {\n      const key = getQueryCacheKey(perspective, query, params)\n      const snapshot = snapshots.get(key)\n      if (snapshot && snapshot.resultSourceMap?.documents?.length) {\n        for (const { _id } of snapshot.resultSourceMap.documents) {\n          nextTurboIds.add(_id)\n        }\n      }\n    }\n    const nextTurboIdsSnapshot = [...nextTurboIds].sort()\n    if (JSON.stringify(turboIds) !== JSON.stringify(nextTurboIdsSnapshot)) {\n      setTurboIds(nextTurboIdsSnapshot)\n    }\n  }, [cache, setTurboIds, snapshots, turboIds])\n\n  // Figure out which documents are missing from the cache\n  const [batch, setBatch] = useState<string[][]>([])\n  useEffect(() => {\n    const batchSet = new Set(batch.flat())\n    const nextBatch = new Set<string>()\n    for (const turboId of turboIds) {\n      if (\n        !batchSet.has(turboId) &&\n        !unstable__documentsCache.has(\n          unstable__getDocumentCacheKey(\n            { projectId, dataset, perspective },\n            { _id: turboId },\n          ),\n        )\n      ) {\n        nextBatch.add(turboId)\n      }\n    }\n    const nextBatchSlice = [...nextBatch].slice(0, 10)\n    if (nextBatchSlice.length === 0) return\n    setBatch((prevBatch) => [...prevBatch.slice(-10), nextBatchSlice])\n  }, [batch, dataset, perspective, projectId, turboIds])\n\n  const [lastMutatedDocumentId, setLastMutatedDocumentId] = useState<string>()\n  // Use the same listen instance and patch documents as they come in\n  useEffect(() => {\n    const subscription = client\n      .listen(\n        perspective === 'published'\n          ? `*[!(_id in path(\"drafts.**\"))]`\n          : `*[_id in path(\"drafts.**\")]`,\n        {},\n        {\n          events: ['mutation'],\n          effectFormat: 'mendoza',\n          includePreviousRevision: false,\n          includeResult: false,\n          tag: 'presentation-loader',\n        },\n      )\n      .subscribe((update) => {\n        if (update.type !== 'mutation' || !update.effects?.apply?.length) return\n        // Schedule a reach state update with the ID of the document that were mutated\n        // This react handler will apply the document to related source map snapshots\n        const key = unstable__getDocumentCacheKey(\n          { projectId, dataset, perspective },\n          { _id: update.documentId },\n        )\n        const cachedDocument = unstable__documentsCache.peek(key)\n        if (cachedDocument as SanityDocument) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const patchDoc = { ...cachedDocument } as any\n          delete patchDoc._rev\n          const patchedDocument = applyPatch(patchDoc, update.effects.apply)\n          unstable__documentsCache.set(key, patchedDocument)\n        }\n\n        setLastMutatedDocumentId(update.documentId)\n      })\n    return () => subscription.unsubscribe()\n  }, [client, dataset, perspective, projectId])\n\n  // If the last mutated document is in the list over turboIds then lets apply the source map\n  useEffect(() => {\n    if (!lastMutatedDocumentId || !turboIds.includes(lastMutatedDocumentId))\n      return\n\n    const updatedKeys: QueryCacheKey[] = []\n    for (const [key, snapshot] of snapshots.entries()) {\n      if (snapshot.resultSourceMap?.documents?.length) {\n        snapshot.result = turboChargeResultIfSourceMap(\n          liveDocument,\n          projectId,\n          dataset,\n          snapshot.result,\n          perspective,\n          snapshot.resultSourceMap,\n        )\n        updatedKeys.push(key)\n      }\n    }\n    for (const updatedKey of updatedKeys) {\n      const listeners = cache.get(updatedKey)?.listeners\n      if (listeners) {\n        for (const listener of listeners) {\n          listener()\n        }\n      }\n    }\n    setLastMutatedDocumentId(undefined)\n  }, [\n    liveDocument,\n    cache,\n    dataset,\n    lastMutatedDocumentId,\n    perspective,\n    projectId,\n    snapshots,\n    turboIds,\n  ])\n\n  const [lastDraftDocumentRev, setLastDraftDocumentRev] = useState<string>()\n  useEffect(() => {\n    if (!lastDraftDocumentRev) return\n\n    const updatedKeys: QueryCacheKey[] = []\n    for (const [key, snapshot] of snapshots.entries()) {\n      if (snapshot.resultSourceMap?.documents?.length) {\n        snapshot.result = turboChargeResultIfSourceMap(\n          liveDocument,\n          projectId,\n          dataset,\n          snapshot.result,\n          perspective,\n          snapshot.resultSourceMap,\n        )\n        updatedKeys.push(key)\n      }\n    }\n    for (const updatedKey of updatedKeys) {\n      const listeners = cache.get(updatedKey)?.listeners\n      if (listeners) {\n        for (const listener of listeners) {\n          listener()\n        }\n      }\n    }\n  }, [\n    cache,\n    dataset,\n    liveDocument,\n    lastDraftDocumentRev,\n    perspective,\n    projectId,\n    snapshots,\n  ])\n  useEffect(() => {\n    if (liveDocument) {\n      setLastDraftDocumentRev(liveDocument._rev)\n    }\n  }, [liveDocument])\n\n  return (\n    <>\n      {batch.map((ids) => (\n        <GetDocuments\n          key={JSON.stringify(ids)}\n          client={client}\n          projectId={projectId}\n          dataset={dataset}\n          ids={ids}\n          perspective={perspective}\n        />\n      ))}\n    </>\n  )\n})\nTurbo.displayName = 'Turbo'\n\ninterface GetDocumentsProps extends Pick<LiveStoreProviderProps, 'client'> {\n  projectId: string\n  dataset: string\n  ids: string[]\n  perspective: DocumentCachePerspective\n}\nconst GetDocuments = memo(function GetDocuments(props: GetDocumentsProps) {\n  const { client, projectId, dataset, ids, perspective } = props\n\n  useEffect(() => {\n    const missingIds = ids.filter(\n      (id) =>\n        !unstable__documentsCache.has(\n          unstable__getDocumentCacheKey(\n            { projectId, dataset, perspective },\n            { _id: id },\n          ),\n        ),\n    )\n    if (missingIds.length === 0) return\n    client.getDocuments(missingIds).then((documents) => {\n      for (const doc of documents) {\n        if (doc && doc?._id) {\n          unstable__documentsCache.set(\n            unstable__getDocumentCacheKey(\n              { projectId, dataset, perspective },\n              doc,\n            ),\n            doc,\n          )\n        }\n      }\n      // eslint-disable-next-line no-console\n    }, console.error)\n  }, [client, dataset, ids, perspective, projectId])\n\n  return null\n})\nGetDocuments.displayName = 'GetDocuments'\n","// This is a smaller version of `useLiveQuery`, as `LiveQuery` doesn't\n// need the more advanced features `useLiveQuery`, like the `isEqual` option or the `loading` state\n\nimport type { QueryParams as ClientQueryParams } from '@sanity/client'\nimport { useQueryParams } from '@sanity/visual-editing-helpers/hooks'\nimport {\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  useSyncExternalStore,\n} from 'react'\n\nimport { defineListenerContext } from './context'\n\n// Re-export types we use that are needed externally\nexport type { ClientQueryParams }\n\n/** @public */\nexport function useLiveQuery<\n  QueryResult,\n  QueryParams extends ClientQueryParams = ClientQueryParams,\n>(\n  initialData: QueryResult,\n  query: string,\n  queryParams2?: QueryParams,\n): QueryResult {\n  const defineStore = useContext(defineListenerContext)\n  if (!defineStore) {\n    throw new Error('useLiveQuery must be used inside a <LiveQueryProvider />')\n  }\n  const queryParams = useQueryParams(queryParams2)\n  const store = useMemo(\n    () => defineStore<QueryResult>(initialData, query, queryParams),\n    [defineStore, initialData, queryParams, query],\n  )\n  // initialSnapshot might change before hydration is done, so deep cloning it on the first hook call\n  // helps ensure that we don't get a mismatch between the server and client snapshots\n  const [serverSnapshot] = useState(() => {\n    if (initialData === undefined) {\n      throw new Error(\n        `initialSnapshot can't be undefined, if you don't want an initial value use null instead`,\n      )\n    }\n    try {\n      return JSON.parse(JSON.stringify(initialData))\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        \"Failed to deep clone initialSnapshot, this is likely an error and an indication that the snapshot isn't JSON serializable\",\n        { initialSnapshot: initialData, error },\n      )\n      return initialData\n    }\n  })\n  const getServerSnapshot = useCallback(() => serverSnapshot, [serverSnapshot])\n\n  return useSyncExternalStore(\n    store.subscribe,\n    store.getSnapshot,\n    getServerSnapshot,\n  )\n}\n","import type { ChannelsController } from '@sanity/channels'\nimport type {\n  ClientPerspective,\n  ContentSourceMap,\n  QueryParams,\n} from '@sanity/client'\nimport { VisualEditingMsg } from '@sanity/visual-editing-helpers'\nimport { useEffect, useMemo, useRef } from 'react'\nimport isEqual from 'react-fast-compare'\nimport { type SanityDocument, useClient } from 'sanity'\n\nimport LiveStoreProvider from './LiveStoreProvider'\nimport { useLiveQuery } from './useLiveQuery'\n\nexport default function LoaderQueries(props: {\n  activePerspective: boolean\n  liveDocument: SanityDocument | null\n  channel: ChannelsController<VisualEditingMsg> | undefined\n  perspective: ClientPerspective\n  liveQueries: Record<string, { query: string; params: QueryParams }>\n}): any {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { activePerspective, liveDocument, channel, perspective, liveQueries } =\n    props\n  // @TODO lift up this client instance to the root, re-use it everywhere\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const studioClient = useClient({ apiVersion: '2023-10-16' })\n  const clientConfig = useMemo(() => studioClient.config(), [studioClient])\n  const client = useMemo(\n    () =>\n      studioClient.withConfig({\n        perspective,\n        resultSourceMap: 'withKeyArraySelector',\n      }),\n    [perspective, studioClient],\n  )\n  useEffect(() => {\n    if (channel && activePerspective) {\n      const { projectId, dataset } = clientConfig\n      channel.send('loaders', 'loader/perspective', {\n        projectId: projectId!,\n        dataset: dataset!,\n        perspective,\n      })\n    }\n  }, [activePerspective, channel, clientConfig, perspective])\n\n  return (\n    <LiveStoreProvider\n      liveDocument={liveDocument}\n      client={client}\n      perspective={perspective}\n      refreshInterval={activePerspective ? 2000 : 0}\n    >\n      {Object.entries(liveQueries).map(([key, { query, params }]) => (\n        <QuerySubscription\n          key={`${key}${perspective}`}\n          projectId={clientConfig.projectId!}\n          dataset={clientConfig.dataset!}\n          perspective={perspective}\n          query={query}\n          params={params}\n          channel={channel}\n        />\n      ))}\n    </LiveStoreProvider>\n  )\n}\n\nfunction QuerySubscription(props: {\n  projectId: string\n  dataset: string\n  perspective: ClientPerspective\n  query: string\n  params: QueryParams\n  channel: ChannelsController<VisualEditingMsg> | undefined\n}) {\n  const { projectId, dataset, perspective, query, params, channel } = props\n\n  const data = useLiveQuery<null | {\n    result: any\n    resultSourceMap?: ContentSourceMap\n  }>(null, query, params)\n  const prevResult = useRef(data?.result)\n  const prevResultSourceMap = useRef(data?.resultSourceMap)\n  const result = data?.result\n  const resultSourceMap = data?.resultSourceMap\n\n  useEffect(() => {\n    if (\n      resultSourceMap &&\n      !isEqual(prevResult.current, result) &&\n      !isEqual(prevResultSourceMap.current, resultSourceMap)\n    ) {\n      channel!.send('loaders', 'loader/query-change', {\n        projectId,\n        dataset,\n        perspective,\n        query,\n        params,\n        result,\n        resultSourceMap,\n      })\n      prevResult.current = result\n      prevResultSourceMap.current = resultSourceMap\n    }\n  }, [\n    channel,\n    dataset,\n    params,\n    perspective,\n    projectId,\n    query,\n    result,\n    resultSourceMap,\n  ])\n\n  return null\n}\n","import { createContext, type CSSProperties } from 'react'\n\nimport { PanelElement, ResizerElement } from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useContext,\n  useLayoutEffect,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const { getPanelStyle, registerElement, unregisterElement } = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [\n    id,\n    defaultSize,\n    order,\n    maxWidth,\n    minWidth,\n    registerElement,\n    unregisterElement,\n  ])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {\n  type FunctionComponent,\n  MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport { usePanelId } from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({ $disabled }) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-shadow-outline-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({ $disabled }) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({ id: propId, order, disabled = false }) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const id = usePanelId(propId)\n\n  const {\n    activeResizer,\n    drag,\n    startDragging,\n    stopDragging,\n    registerElement,\n    unregisterElement,\n  } = context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n\n    return () => {\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, { id, order, type: 'resizer', el })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import { useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const idRef = useRef(id || uuid())\n  return idRef.current\n}\n","export function debounce<F extends (...args: any[]) => void>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: any\n  return ((...args: any[]) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import { useMemo } from 'react'\n\nimport { debounce } from '../lib/debounce'\nimport { PanelElement } from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[]\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\n\nfunction getNextWidth(\n  panel: PanelElement,\n  nextWidth: number,\n  containerWidth: number,\n) {\n  const { maxWidth: maxWidthPx, minWidth: minWidthPx } = panel\n  const maxWidth =\n    maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const { panels, widths: prevWidths } = panelsState\n  const { widths: initialWidths } = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(\n      pivotPanel,\n      width + Math.abs(delta),\n      containerWidth,\n    )\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(\n      panel,\n      width - deltaRemaining,\n      containerWidth,\n    )\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied\n          .toPrecision(10)\n          .localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n            numeric: true,\n          }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(\n  panels: PanelElement[],\n  id: string,\n  widths: number[],\n): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(\n  element: PanelElement | ResizerElement,\n): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(\n  element: PanelElement | ResizerElement,\n): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(\n  elements: ElementMap,\n): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({ order: a }, { order: b }) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let { maxWidth, minWidth } = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\nimport { usePanelsStorage } from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({\n  children,\n}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(\n    () => getSortedElements(elements).filter(isPanel),\n    [elements],\n  )\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback(\n    (id: string, data: PanelElement | ResizerElement) => {\n      setElements((prev) => {\n        if (prev.has(id)) return prev\n        const next = new Map(prev)\n        next.set(id, data)\n        return next\n      })\n    },\n    [],\n  )\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {\n        containerWidth,\n        dragOffset,\n        panelBefore,\n        panelAfter,\n        resizerRect,\n      } = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const { widths: prevWidths } = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const { widths } = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(\n        panels,\n        storedWidths,\n        window.innerWidth,\n      )\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const { panels, widths: prevWidths } = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import { ReactNode } from 'react'\nimport { useEditState } from 'sanity'\n\nexport function HoldEditState(props: { id: string; type: string }): ReactNode {\n  const { id, type } = props\n\n  useEditState(id, type)\n\n  return null\n}\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useMemo,\n} from 'react'\n\nimport {\n  PresentationNavigateContext,\n  PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport { SetPresentationParams } from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    setParams: SetPresentationParams\n  }>\n> = function (props) {\n  const { children, setParams } = props\n\n  const navigate = useCallback(\n    (preview: string) => {\n      setParams({ preview })\n    },\n    [setParams],\n  )\n\n  const context = useMemo<PresentationNavigateContextValue>(\n    () => navigate,\n    [navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={context}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport { PresentationParamsContext } from './PresentationParamsContext'\nimport { PresentationParams } from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const { children, params } = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\nimport {\n  DeskDocumentPaneParams,\n  PresentationParams,\n  SetPresentationParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    deskParams: DeskDocumentPaneParams\n    devMode: boolean\n    name: string\n    params: PresentationParams\n    setParams: SetPresentationParams\n  }>\n> = function (props) {\n  const { children, deskParams, devMode, name, params, setParams } = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      deskParams,\n      devMode,\n      name,\n      params,\n      setParams,\n    }),\n    [deskParams, devMode, name, params, setParams],\n  )\n\n  return (\n    <PresentationContext.Provider value={context}>\n      {children}\n    </PresentationContext.Provider>\n  )\n}\n","import { motion } from 'framer-motion'\nimport styled from 'styled-components'\n\nexport const IFrame = motion(styled.iframe`\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  display: block;\n`)\n","import { LaunchIcon, ResetIcon } from '@sanity/icons'\nimport { Box, Button, TextInput, TextInputClearButtonProps } from '@sanity/ui'\nimport {\n  ChangeEvent,\n  FunctionComponent,\n  KeyboardEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useActiveWorkspace } from 'sanity'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  value: string\n}> = function (props) {\n  const { basePath = '/' } = useActiveWorkspace()?.activeWorkspace || {}\n  const { fontSize = 1, onChange, origin, padding = 3, value } = props\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(\n    undefined,\n  )\n  const [customValidity, setCustomValidity] = useState<string | undefined>(\n    undefined,\n  )\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (\n          !absoluteValue.startsWith(origin + '/') &&\n          absoluteValue !== origin\n        ) {\n          setCustomValidity(`URL must start with ${origin}`)\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (\n          !origin &&\n          (absoluteValue.startsWith(`${basePath}/`) ||\n            absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            `URL can't have the same base path as the Studio ${basePath}`,\n          )\n          return\n        }\n\n        const nextValue =\n          absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(\n    () => ({ icon: ResetIcon }),\n    [],\n  )\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        style={{ zIndex: 1 }}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={\n          <Box padding={1} style={{ lineHeight: 0, zIndex: -1 }}>\n            <Button\n              as=\"a\"\n              fontSize={fontSize}\n              href={origin + (sessionValue || value)}\n              icon={LaunchIcon}\n              padding={padding - 1}\n              mode=\"bleed\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            />\n          </Box>\n        }\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import type { ChannelStatus } from '@sanity/channels'\nimport { ClientPerspective } from '@sanity/client'\nimport {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  DatabaseIcon,\n  DesktopIcon,\n  EditIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n} from '@sanity/icons'\nimport { withoutSecretSearchParams } from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  ButtonTone,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n} from '@sanity/ui'\nimport { AnimatePresence, motion, MotionConfig } from 'framer-motion'\nimport {\n  ComponentType,\n  createElement,\n  Dispatch,\n  forwardRef,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { MAX_TIME_TO_OVERLAYS_CONNECTION } from '../constants'\nimport { PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { IFrame } from './IFrame'\nimport { PreviewLocationInput } from './PreviewLocationInput'\n\nconst MotionFlex = motion(Flex)\n\nconst StyledSwitch = styled(Switch)`\n  & > span {\n    width: 21px;\n    height: 13px;\n    overflow: hidden;\n\n    & > span:nth-child(1) {\n      width: 21px;\n      height: 13px;\n    }\n\n    & > span:nth-child(2) {\n      width: 9px;\n      height: 9px;\n      top: 2px;\n      left: 2px;\n    }\n  }\n\n  & input:checked + span {\n    & > span:nth-child(2) {\n      transform: translate3d(8px, 0, 0) !important;\n    }\n  }\n`\n\nconst PERSPECTIVE_TITLES: Record<ClientPerspective, string> = {\n  previewDrafts: 'Drafts',\n  published: 'Published',\n  raw: 'Raw',\n}\n\nconst PERSPECTIVE_TONES: Record<ClientPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n  raw: 'default',\n}\n\nconst PERSPECTIVE_ICONS: Record<ClientPerspective, ComponentType> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n  raw: DatabaseIcon,\n}\n\nexport const PreviewFrame = forwardRef<\n  HTMLIFrameElement,\n  {\n    initialUrl: URL\n    targetOrigin: string\n    navigatorEnabled: boolean\n    onPathChange: (nextPath: string) => void\n    overlayEnabled: boolean\n    params: PresentationParams\n    perspective: ClientPerspective\n    setPerspective: Dispatch<SetStateAction<ClientPerspective>>\n    toggleNavigator?: () => void\n    toggleOverlay: () => void\n    loadersConnection: ChannelStatus\n    overlaysConnection: ChannelStatus\n    previewKitConnection: ChannelStatus\n  }\n>(function PreviewFrame(props, ref) {\n  const {\n    initialUrl,\n    targetOrigin,\n    navigatorEnabled,\n    onPathChange,\n    overlayEnabled,\n    params,\n    perspective,\n    setPerspective,\n    toggleNavigator,\n    toggleOverlay,\n    loadersConnection,\n    overlaysConnection,\n    previewKitConnection,\n  } = props\n\n  const { devMode } = usePresentationTool()\n\n  const [mode, setMode] = useState<'desktop' | 'mobile'>('desktop')\n  const prefersReducedMotion = usePrefersReducedMotion()\n\n  const setDesktopMode = useCallback(() => setMode('desktop'), [setMode])\n  const setMobileMode = useCallback(() => setMode('mobile'), [setMode])\n  const [loading, setLoading] = useState(true)\n  const [timedOut, setTimedOut] = useState(false)\n  const [refreshing, setRefreshing] = useState(false)\n  const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n  const iframeIsBusy =\n    loading || refreshing || overlaysConnection === 'connecting'\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = useCallback(() => {\n    if (typeof ref === 'function' || !ref?.current) {\n      return\n    }\n\n    // Funky way to reload an iframe without CORS issues\n    // eslint-disable-next-line no-self-assign\n    // ref.current.src = ref.current.src\n    ref.current.src = `${targetOrigin}${params.preview || '/'}`\n\n    setRefreshing(true)\n  }, [params.preview, targetOrigin, ref])\n  const handleRetry = useCallback(() => {\n    if (typeof ref === 'function' || !ref?.current) {\n      return\n    }\n\n    ref.current.src = initialUrl.toString()\n\n    setRefreshing(true)\n  }, [ref, initialUrl])\n  const handleContinueAnyway = useCallback(() => {\n    setContinueAnyway(true)\n  }, [])\n\n  const [continueAnyway, setContinueAnyway] = useState(false)\n  const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] =\n    useState(false)\n  useEffect(() => {\n    if (loading || refreshing) {\n      return\n    }\n\n    if (\n      overlaysConnection === 'connecting' ||\n      overlaysConnection === 'reconnecting'\n    ) {\n      const timeout = setTimeout(() => {\n        setShowOverlaysConnectionState(true)\n      }, 1000)\n      return () => clearTimeout(timeout)\n    }\n    return\n  }, [overlaysConnection, loading, refreshing, setShowOverlaysConnectionState])\n\n  useEffect(() => {\n    if (loading || refreshing || !showOverlaysConnectionStatus) {\n      return\n    }\n    if (overlaysConnection === 'connected') {\n      setSomethingIsWrong(false)\n      setShowOverlaysConnectionState(false)\n      setTimedOut(false)\n      setContinueAnyway(false)\n    }\n    if (overlaysConnection === 'connecting') {\n      const timeout = setTimeout(() => {\n        setTimedOut(true)\n        // eslint-disable-next-line no-console\n        console.error(\n          `Unable to connect to overlays. Make sure you're calling the 'enableOverlays' function in '@sanity/overlays' correctly`,\n        )\n      }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n      return () => clearTimeout(timeout)\n    }\n    if (overlaysConnection === 'reconnecting') {\n      const timeout = setTimeout(() => {\n        setTimedOut(true)\n        setSomethingIsWrong(true)\n      }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n      return () => clearTimeout(timeout)\n    }\n    if (overlaysConnection === 'disconnected') {\n      setSomethingIsWrong(true)\n    }\n    return\n  }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n  const previewLocationRoute = useMemo(() => {\n    const previewUrl = new URL(params.preview || '/', targetOrigin)\n    const { pathname, search } = withoutSecretSearchParams(previewUrl)\n\n    return `${pathname}${search}`\n  }, [params.preview, targetOrigin])\n\n  const onIFrameLoad = useCallback(() => {\n    setLoading(false)\n    setRefreshing(false)\n  }, [])\n\n  return (\n    <MotionConfig\n      transition={prefersReducedMotion ? { duration: 0 } : undefined}\n    >\n      <TooltipDelayGroupProvider delay={1000}>\n        <Card\n          flex=\"none\"\n          padding={2}\n          shadow={1}\n          style={{ position: 'relative' }}\n        >\n          <Flex align=\"center\" gap={2} style={{ minHeight: 0 }}>\n            {toggleNavigator && (\n              <Tooltip\n                content={<Text size={1}>Toggle navigator</Text>}\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Toggle navigator\"\n                  fontSize={1}\n                  icon={PanelLeftIcon}\n                  mode=\"bleed\"\n                  onClick={toggleNavigator}\n                  padding={3}\n                  selected={navigatorEnabled}\n                />\n              </Tooltip>\n            )}\n\n            <Tooltip\n              content={\n                <Flex align=\"center\" style={{ whiteSpace: 'nowrap' }}>\n                  <Box padding={1}>\n                    <Text size={1}>\n                      {overlayEnabled\n                        ? 'Disable edit overlay'\n                        : 'Enable edit overlay'}\n                    </Text>\n                  </Box>\n                </Flex>\n              }\n              fallbackPlacements={['bottom-start']}\n              padding={1}\n              placement=\"bottom\"\n              portal\n            >\n              <Card\n                as=\"label\"\n                flex=\"none\"\n                padding={3}\n                style={{\n                  lineHeight: 0,\n                  borderRadius: 999,\n                  userSelect: 'none',\n                }}\n                tone={overlayEnabled ? 'positive' : undefined}\n              >\n                <Flex align=\"center\" gap={2}>\n                  <div style={{ margin: -2 }}>\n                    <StyledSwitch\n                      checked={overlayEnabled}\n                      onChange={toggleOverlay}\n                      disabled={iframeIsBusy}\n                    />\n                  </div>\n                  <Box>\n                    <Text muted size={1} weight=\"medium\">\n                      Edit\n                    </Text>\n                  </Box>\n                </Flex>\n              </Card>\n            </Tooltip>\n\n            {devMode && (\n              <Tooltip\n                content={\n                  <Text size={1}>\n                    {refreshing ? 'Refreshing…' : 'Refresh preview'}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Refresh preview\"\n                  fontSize={1}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={refreshing}\n                  onClick={handleRefresh}\n                  padding={3}\n                />\n              </Tooltip>\n            )}\n\n            <Box flex={1}>\n              <PreviewLocationInput\n                onChange={onPathChange}\n                origin={previewLocationOrigin}\n                value={previewLocationRoute}\n              />\n            </Box>\n\n            <Flex align=\"center\" flex=\"none\" gap={1}>\n              <MenuButton\n                button={\n                  <Button\n                    fontSize={1}\n                    iconRight={ChevronDownIcon}\n                    mode=\"bleed\"\n                    padding={3}\n                    space={2}\n                    text={PERSPECTIVE_TITLES[perspective]}\n                    loading={\n                      iframeIsBusy ||\n                      (loadersConnection === 'connecting' &&\n                        previewKitConnection !== 'connected')\n                    }\n                    disabled={loadersConnection !== 'connected'}\n                  />\n                }\n                id=\"perspective-menu\"\n                menu={\n                  <Menu style={{ maxWidth: 240 }}>\n                    <MenuItem\n                      fontSize={1}\n                      onClick={() => setPerspective('previewDrafts')}\n                      padding={3}\n                      pressed={perspective === 'previewDrafts'}\n                      tone={PERSPECTIVE_TONES['previewDrafts']}\n                    >\n                      <Flex align=\"flex-start\" gap={3}>\n                        <Box flex=\"none\">\n                          <Text size={1}>\n                            {createElement(PERSPECTIVE_ICONS['previewDrafts'])}\n                          </Text>\n                        </Box>\n                        <Stack flex={1} space={2}>\n                          <Text size={1} weight=\"medium\">\n                            {PERSPECTIVE_TITLES['previewDrafts']}\n                          </Text>\n                          <Text muted size={1}>\n                            View this page with latest draft content\n                          </Text>\n                        </Stack>\n                        <Box flex=\"none\">\n                          <Text\n                            muted\n                            size={1}\n                            style={{\n                              opacity: perspective === 'previewDrafts' ? 1 : 0,\n                            }}\n                          >\n                            <CheckmarkIcon />\n                          </Text>\n                        </Box>\n                      </Flex>\n                    </MenuItem>\n                    <MenuItem\n                      fontSize={1}\n                      onClick={() => setPerspective('published')}\n                      padding={3}\n                      pressed={perspective === 'published'}\n                      tone={PERSPECTIVE_TONES['published']}\n                    >\n                      <Flex align=\"flex-start\" gap={3}>\n                        <Box flex=\"none\">\n                          <Text size={1}>\n                            {createElement(PERSPECTIVE_ICONS['published'])}\n                          </Text>\n                        </Box>\n                        <Stack flex={1} space={2}>\n                          <Text size={1} weight=\"medium\">\n                            {PERSPECTIVE_TITLES['published']}\n                          </Text>\n                          <Text muted size={1}>\n                            View this page with published content\n                          </Text>\n                        </Stack>\n                        <Box flex=\"none\">\n                          <Text\n                            muted\n                            size={1}\n                            style={{\n                              opacity: perspective === 'published' ? 1 : 0,\n                            }}\n                          >\n                            <CheckmarkIcon />\n                          </Text>\n                        </Box>\n                      </Flex>\n                    </MenuItem>\n                  </Menu>\n                }\n                popover={{\n                  // arrow: false,\n                  constrainSize: true,\n                  placement: 'bottom',\n                  portal: true,\n                }}\n              />\n            </Flex>\n\n            <Flex align=\"center\" flex=\"none\" gap={1}>\n              <Tooltip\n                content={<Text size={1}>Full viewport</Text>}\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Full viewport\"\n                  fontSize={1}\n                  icon={DesktopIcon}\n                  mode=\"bleed\"\n                  onClick={setDesktopMode}\n                  padding={3}\n                  selected={mode === 'desktop'}\n                />\n              </Tooltip>\n              <Tooltip\n                content={<Text size={1}>Narrow viewport</Text>}\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Narrow viewport\"\n                  fontSize={1}\n                  icon={MobileDeviceIcon}\n                  mode=\"bleed\"\n                  onClick={setMobileMode}\n                  padding={3}\n                  selected={mode === 'mobile'}\n                />\n              </Tooltip>\n            </Flex>\n          </Flex>\n        </Card>\n\n        <Card flex={1} tone=\"transparent\">\n          <Flex\n            align=\"center\"\n            height=\"fill\"\n            justify=\"center\"\n            padding={mode === 'desktop' ? 0 : 2}\n            sizing=\"border\"\n            style={{\n              position: 'relative',\n              cursor: iframeIsBusy ? 'wait' : undefined,\n            }}\n          >\n            <AnimatePresence>\n              {!somethingIsWrong &&\n              !loading &&\n              !refreshing &&\n              showOverlaysConnectionStatus &&\n              !continueAnyway ? (\n                <MotionFlex\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  variants={spinnerVariants}\n                  justify=\"center\"\n                  align=\"center\"\n                  style={{\n                    inset: `0`,\n                    position: `absolute`,\n                    backdropFilter: timedOut\n                      ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                      : 'blur(2px)',\n                    ['transition' as string]:\n                      'backdrop-filter 0.2s ease-in-out',\n                    zIndex: 1,\n                  }}\n                >\n                  <Flex\n                    style={{ ...sizes[mode] }}\n                    justify=\"center\"\n                    align=\"center\"\n                    direction=\"column\"\n                    gap={4}\n                  >\n                    {timedOut && (\n                      <Button\n                        disabled\n                        fontSize={1}\n                        mode=\"ghost\"\n                        text=\"Continue anyway\"\n                        style={{ opacity: 0 }}\n                      />\n                    )}\n                    <Card\n                      radius={2}\n                      tone={timedOut ? 'caution' : 'inherit'}\n                      padding={4}\n                      shadow={1}\n                    >\n                      <Flex\n                        justify=\"center\"\n                        align=\"center\"\n                        direction=\"column\"\n                        gap={4}\n                      >\n                        <Spinner muted />\n                        <Text muted size={1}>\n                          {timedOut ? (\n                            <>\n                              Unable to connect, check the browser console for\n                              more information.\n                            </>\n                          ) : (\n                            'Connecting…'\n                          )}\n                        </Text>\n                      </Flex>\n                    </Card>\n                    {timedOut && (\n                      <Button\n                        fontSize={1}\n                        // mode=\"ghost\"\n                        tone=\"critical\"\n                        onClick={handleContinueAnyway}\n                        text=\"Continue anyway\"\n                      />\n                    )}\n                  </Flex>\n                </MotionFlex>\n              ) : (loading || iframeIsBusy) && !continueAnyway ? (\n                <MotionFlex\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  variants={spinnerVariants}\n                  justify=\"center\"\n                  align=\"center\"\n                  style={{\n                    inset: `0`,\n                    position: `absolute`,\n                    // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                  }}\n                >\n                  <Flex\n                    style={{ ...sizes[mode] }}\n                    justify=\"center\"\n                    align=\"center\"\n                    direction=\"column\"\n                    gap={4}\n                  >\n                    <Spinner muted />\n                    <Text muted size={1}>\n                      Loading…\n                    </Text>\n                  </Flex>\n                </MotionFlex>\n              ) : somethingIsWrong && !continueAnyway ? (\n                <MotionFlex\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  variants={errorVariants}\n                  justify=\"center\"\n                  align=\"center\"\n                  style={{\n                    background: 'var(--card-bg-color)',\n                    inset: `0`,\n                    position: `absolute`,\n                    borderTop: '1px solid transparent',\n                    boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                  }}\n                >\n                  <ErrorCard\n                    flex={1}\n                    message=\"Could not connect to the preview\"\n                    onRetry={handleRetry}\n                    onContinueAnyway={handleContinueAnyway}\n                  >\n                    {devMode && (\n                      <>\n                        {overlaysConnection !== 'connected' && (\n                          <Card padding={3} radius={2} tone=\"critical\">\n                            <Stack space={3}>\n                              <Label muted size={0}>\n                                Overlay connection status\n                              </Label>\n                              <Code size={1}>{overlaysConnection}</Code>\n                            </Stack>\n                          </Card>\n                        )}\n\n                        {loadersConnection !== 'connected' && (\n                          <Card padding={3} radius={2} tone=\"critical\">\n                            <Stack space={3}>\n                              <Label muted size={0}>\n                                Loader connection status\n                              </Label>\n                              <Code size={1}>{loadersConnection}</Code>\n                            </Stack>\n                          </Card>\n                        )}\n                      </>\n                    )}\n                  </ErrorCard>\n                </MotionFlex>\n              ) : null}\n            </AnimatePresence>\n            <IFrame\n              ref={ref}\n              style={{\n                pointerEvents:\n                  iframeIsBusy && !continueAnyway ? 'none' : 'auto',\n                boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                borderTop: '1px solid transparent',\n              }}\n              src={initialUrl.toString()}\n              initial={['background']}\n              variants={iframeVariants}\n              animate={[\n                (loading || iframeIsBusy) && !continueAnyway\n                  ? 'background'\n                  : 'active',\n                refreshing ? 'reloading' : 'idle',\n                mode,\n                showOverlaysConnectionStatus && !continueAnyway\n                  ? 'timedOut'\n                  : '',\n              ]}\n              onLoad={onIFrameLoad}\n            />\n          </Flex>\n        </Card>\n      </TooltipDelayGroupProvider>\n    </MotionConfig>\n  )\n})\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst errorVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-shadow-outline-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","import { studioPath } from '@sanity/client/csm'\nimport { urlStringToPath } from '@sanity/visual-editing-helpers'\n\nexport function parsePath(rawPath: string | undefined): {\n  id: string | undefined\n  path: string | undefined\n} {\n  if (rawPath === undefined) {\n    return { id: undefined, path: undefined }\n  }\n\n  const segments = rawPath?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return {\n    id: segments[0],\n    path:\n      segments.length > 1\n        ? studioPath.toString(urlStringToPath(segments.slice(1).join('.')))\n        : undefined,\n  }\n}\n","import { studioPath } from '@sanity/client/csm'\nimport { pathToUrlString } from '@sanity/visual-editing-helpers'\nimport isEqual from 'lodash.isequal'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { NavigateOptions, RouterContextValue, RouterState } from 'sanity/router'\n\nimport { debounce } from './lib/debounce'\nimport { parsePath } from './parsePath'\nimport {\n  DeskDocumentPaneParams,\n  PresentationParams,\n  PresentationStateParams,\n  SetPresentationParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n}): {\n  deskParams: DeskDocumentPaneParams\n  navigate: (nextState: RouterState, options?: NavigateOptions) => void\n  params: PresentationParams\n  setParams: SetPresentationParams\n} {\n  const [params, setParamsState] = useState<PresentationParams>(() => {\n    const { id, path } = parsePath(\n      routerState.path && decodeURIComponent(routerState.path),\n    )\n    return {\n      id,\n      type: routerState.type,\n      path,\n      preview:\n        routerSearchParams.preview ||\n        `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams.perspective,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n    }\n  })\n\n  const setParams = useCallback((newParams: Partial<PresentationParams>) => {\n    setParamsState((state) => {\n      const nextState = { ...state, ...newParams }\n      if (isEqual(pruneObject(state), pruneObject(nextState))) {\n        return state\n      }\n      return nextState\n    })\n  }, [])\n\n  const deskParams = useMemo<DeskDocumentPaneParams>(\n    () =>\n      pruneObject({\n        inspect: params.inspect,\n        path: params.path,\n        rev: params.rev,\n        since: params.since,\n        template: params.template,\n        view: params.view,\n        // assist\n        pathKey: params.pathKey,\n        instruction: params.instruction,\n        // comments\n        comment: params.comment,\n      }),\n    [\n      params.inspect,\n      params.path,\n      params.rev,\n      params.since,\n      params.template,\n      params.view,\n      params.pathKey,\n      params.instruction,\n      params.comment,\n    ],\n  )\n\n  useEffect(() => {\n    const { type } = routerState\n    // decodeURI param in path?\n    const { id, path } = parsePath(routerState.path)\n\n    const timeout = setTimeout(\n      () =>\n        setParams({\n          id,\n          type: type === '*' ? undefined : type,\n          path,\n          preview:\n            routerSearchParams.preview ||\n            `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n          perspective: routerSearchParams.perspective,\n          inspect: routerSearchParams.inspect,\n          rev: routerSearchParams.rev,\n          since: routerSearchParams.since,\n          template: routerSearchParams.template,\n          view: routerSearchParams.view,\n          // assist\n          pathKey: routerSearchParams.pathKey,\n          instruction: routerSearchParams.instruction,\n          // comments\n          comment: routerSearchParams.comment,\n        }),\n      0,\n    )\n    return () => clearTimeout(timeout)\n  }, [initialPreviewUrl, routerSearchParams, routerState, setParams])\n\n  const navigate = useMemo(() => {\n    // Debounce navigation to mitigate various event related race conditions\n    return debounce((nextState: RouterState, options?: NavigateOptions) => {\n      const state = pruneObject(nextState)\n      routerNavigate(state, options)\n    }, 50)\n  }, [routerNavigate])\n\n  const previewRef = useRef(params.preview)\n\n  useEffect(() => {\n    const previousPreview = previewRef.current\n    previewRef.current = params.preview\n\n    const type = params.type\n    const path = params.id\n      ? pathToUrlString(\n          studioPath.fromString(\n            [params.id, params.path].filter(Boolean).join('.'),\n          ),\n        )\n      : undefined\n\n    const searchParams = pruneObject({\n      preview: params.preview,\n      perspective: params.perspective === 'published' ? 'published' : undefined,\n      inspect: params.inspect,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n    }) satisfies PresentationParams\n\n    const replace = params.preview === previousPreview\n    const timeout = setTimeout(\n      () =>\n        navigate(\n          {\n            type,\n            path,\n            _searchParams: Object.entries(\n              searchParams as Record<string, string>,\n            ),\n          },\n          { replace },\n        ),\n      0,\n    )\n    return () => clearTimeout(timeout)\n  }, [navigate, params])\n\n  return {\n    navigate,\n    setParams,\n    deskParams,\n    params,\n  }\n}\n","import { createPreviewSecret } from '@sanity/preview-url-secret/create-secret'\nimport { definePreviewUrl } from '@sanity/preview-url-secret/define-preview-url'\nimport { startTransition, useEffect, useMemo, useState } from 'react'\nimport {\n  type SanityClient,\n  useActiveWorkspace,\n  useClient,\n  useCurrentUser,\n} from 'sanity'\nimport { suspend } from 'suspend-react'\n\nimport { API_VERSION } from './constants'\nimport { PreviewUrlOption } from './types'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  previewSearchParam: string | null,\n): URL {\n  const client = useClient({ apiVersion: API_VERSION })\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName)\n  const previewUrlSecret = usePreviewUrlSecret(\n    typeof previewUrl === 'object' || typeof previewUrl === 'function',\n    deps,\n  )\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        } else if (document.referrer) {\n          const referrerUrl = new URL(document.referrer)\n          if (referrerUrl.origin === resolvedUrl.origin) {\n            resultUrl = referrerUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) ||\n          resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object'\n        ? definePreviewUrl<SanityClient>(previewUrl)\n        : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      previewSearchParam,\n      referrer: typeof document === 'undefined' ? null : document.referrer,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n) {\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      '@sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName],\n  )\n}\n\nfunction usePreviewUrlSecret(\n  enabled: boolean,\n  deps: (string | symbol | undefined)[],\n) {\n  const client = useClient({ apiVersion: API_VERSION })\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return\n    const timeout = setTimeout(() => {\n      startTransition(() =>\n        setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()),\n      )\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import {\n  type ChannelsController,\n  type ChannelStatus,\n  createChannelsController,\n} from '@sanity/channels'\nimport type { ClientPerspective, QueryParams } from '@sanity/client'\nimport { studioPath } from '@sanity/client/csm'\nimport { Flex } from '@sanity/ui'\nimport {\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  type VisualEditingConnectionIds,\n  type VisualEditingMsg,\n} from '@sanity/visual-editing-helpers'\nimport {\n  type ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useUnique } from 'sanity'\nimport {\n  getPublishedId,\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n} from 'sanity'\nimport { RouterContextValue, useRouter } from 'sanity/router'\nimport styled from 'styled-components'\n\nimport { DEFAULT_TOOL_NAME } from './constants'\nimport { ContentEditor } from './editor/ContentEditor'\nimport LoaderQueries from './loader/LoaderQueries'\nimport { Panel } from './panels/Panel'\nimport { PanelResizer } from './panels/PanelResizer'\nimport { Panels } from './panels/Panels'\nimport { HoldEditState } from './perf/HoldEditState'\nimport { PresentationNavigateProvider } from './PresentationNavigateProvider'\nimport { PresentationParamsProvider } from './PresentationParamsProvider'\nimport { PresentationProvider } from './PresentationProvider'\nimport { PreviewFrame } from './preview/PreviewFrame'\nimport {\n  DeskDocumentPaneParams,\n  NavigatorOptions,\n  PresentationPluginOptions,\n  PresentationStateParams,\n} from './types'\nimport { DocumentOnPage, useDocumentsOnPage } from './useDocumentsOnPage'\nimport { useLocalState } from './useLocalState'\nimport { useParams } from './useParams'\nimport { usePreviewUrl } from './usePreviewUrl'\n\nfunction Navigator(props: NavigatorOptions) {\n  const { minWidth, maxWidth, component: NavigatorComponent } = props\n  const navigatorDisabled =\n    minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const { previewUrl: _previewUrl, components } = props.tool.options ?? {}\n  const name = props.tool.name || DEFAULT_TOOL_NAME\n  const { unstable_navigator } = components || {}\n\n  const { navigate: routerNavigate, state: routerState } =\n    useRouter() as RouterContextValue & { state: PresentationStateParams }\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams.preview || null,\n  )\n\n  const [devMode] = useState(() => {\n    const option = props.tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return (\n      typeof window !== 'undefined' && window.location.hostname === 'localhost'\n    )\n  })\n\n  // @TODO The iframe URL might change, we have to make sure we don't post Studio state to unknown origins\n  // see https://medium.com/@chiragrai3666/exploiting-postmessage-e2b01349c205\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [channel, setChannel] = useState<ChannelsController<VisualEditingMsg>>()\n\n  const [liveQueries, setLiveQueries] = useState<\n    Record<\n      string,\n      { query: string; params: QueryParams; perspective: ClientPerspective }\n    >\n  >({})\n\n  const { setParams, params, deskParams } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n  })\n\n  const [perspective, setPerspective] = useState<ClientPerspective>(() =>\n    params.perspective === 'published' ? params.perspective : 'previewDrafts',\n  )\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective)\n\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  const navigatorProvided = !!unstable_navigator?.component\n\n  const [navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const previewRef = useRef<typeof params.preview>()\n\n  const idRef = useRef(params.id)\n\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const [preloadRefs, setPreloadRefs] = useState<DocumentOnPage[]>(() =>\n    documentsOnPage\n      .slice(0, 3)\n      .map((d) => ({ ...d, _id: getPublishedId(d._id) })),\n  )\n\n  // Update the perspective when the param changes\n  useEffect(() => {\n    if (perspective !== params.perspective) {\n      setParams({ perspective })\n    }\n  }, [params.perspective, perspective, setParams])\n\n  useEffect(() => {\n    setPreloadRefs(\n      documentsOnPage\n        .slice(0, 3)\n        .map((d) => ({ ...d, _id: getPublishedId(d._id) })),\n    )\n  }, [documentsOnPage])\n\n  useEffect(() => {\n    if (params.id !== idRef.current) {\n      idRef.current = params.id\n\n      if (params.id) {\n        setPreloadRefs((p) => {\n          const exists = p.find((d) => d._id === params.id)\n\n          if (exists) return p\n\n          return p.slice(1).concat([{ _id: params.id!, _type: params.type! }])\n        })\n      }\n    }\n  }, [params])\n\n  const [overlaysConnection, setOverlaysConnection] =\n    useState<ChannelStatus>('connecting')\n  const [loadersConnection, setLoadersConnection] =\n    useState<ChannelStatus>('connecting')\n  const [previewKitConnection, setPreviewKitConnection] =\n    useState<ChannelStatus>('connecting')\n\n  useEffect(() => {\n    const iframe = iframeRef.current\n\n    if (!iframe) return\n\n    const nextChannel = createChannelsController<VisualEditingMsg>({\n      id: 'presentation' satisfies VisualEditingConnectionIds,\n      frame: iframe,\n      frameOrigin: targetOrigin,\n      connectTo: [\n        {\n          id: 'overlays' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setOverlaysConnection,\n          onEvent(type, data) {\n            if (type === 'overlay/focus' && 'id' in data) {\n              setParams({\n                id: data.id,\n                path: data.path,\n                type: data.type,\n              })\n            } else if (type === 'overlay/navigate') {\n              if (previewRef.current !== data.url) {\n                const isInitialNavigation = previewRef.current === undefined\n\n                previewRef.current = data.url\n                setParams(\n                  isInitialNavigation\n                    ? { preview: data.url }\n                    : { id: undefined, type: undefined, preview: data.url },\n                )\n              }\n            } else if (type === 'overlay/toggle') {\n              setOverlayEnabled(data.enabled)\n            }\n          },\n        },\n        {\n          id: 'loaders' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setLoadersConnection,\n          onEvent(type, data) {\n            if (type === 'loader/documents') {\n              setDocumentsOnPage(data.perspective, data.documents)\n            } else if (\n              type === 'loader/query-listen' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              setLiveQueries((prev) => ({\n                ...prev,\n                [getQueryCacheKey(data.query, data.params)]: {\n                  perspective: data.perspective,\n                  query: data.query,\n                  params: data.params,\n                },\n              }))\n            }\n          },\n        },\n        {\n          id: 'preview-kit' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setPreviewKitConnection,\n          onEvent(type, data) {\n            if (\n              type === 'preview-kit/documents' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              setDocumentsOnPage(data.perspective, data.documents)\n            }\n          },\n        },\n      ],\n    })\n    setChannel(nextChannel)\n\n    return () => {\n      nextChannel.destroy()\n      setChannel(undefined)\n    }\n  }, [dataset, projectId, setDocumentsOnPage, setParams, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    // eslint-disable-next-line no-warning-comments\n    // @todo nextDocumentId may not be needed with this strategy\n    (nextDocumentId: string, nextPath: Path) => {\n      setParams({\n        // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n        path: studioPath.toString(nextPath),\n      })\n    },\n    [setParams],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (\n        url.origin === initialPreviewUrl.origin &&\n        preview !== params.preview\n      ) {\n        setParams({ id: undefined, path: undefined, preview })\n      }\n    },\n    [initialPreviewUrl, params, setParams],\n  )\n\n  const handleDeskParams = useCallback(\n    (deskParams: DeskDocumentPaneParams) => {\n      setParams({ ...deskParams })\n    },\n    [setParams],\n  )\n\n  useEffect(() => {\n    if (params.id && params.path) {\n      channel?.send('overlays', 'presentation/focus', {\n        id: params.id,\n        path: params.path,\n      })\n    } else {\n      channel?.send('overlays', 'presentation/blur', undefined)\n    }\n  }, [channel, params.id, params.path])\n\n  // Dispatch a navigation message whenever the preview param changes\n  // @todo This will cause a reflection of received navigation messages which could be problematic\n  useEffect(() => {\n    if (\n      previewRef.current &&\n      params.preview &&\n      previewRef.current !== params.preview\n    ) {\n      previewRef.current = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        channel?.send('overlays', 'presentation/navigate', {\n          url: params.preview,\n          type: 'push',\n        })\n      }\n    }\n  }, [channel, overlaysConnection, targetOrigin, params.preview])\n\n  const toggleOverlay = useCallback(\n    () => channel?.send('overlays', 'presentation/toggleOverlay', undefined),\n    [channel],\n  )\n\n  // The current document being edited, it's put on the fast track for super low latency updates\n  const [liveDocument, setLiveDocument] = useState<SanityDocument | null>(null)\n  const onDocumentChange = useCallback(\n    (document: SanityDocument | null) => setLiveDocument(document),\n    [],\n  )\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  return (\n    <>\n      <PresentationProvider\n        deskParams={deskParams}\n        devMode={devMode}\n        name={name}\n        params={params}\n        setParams={setParams}\n      >\n        {/* perf improvement: preload edit state */}\n        {preloadRefs.map((d) => (\n          <HoldEditState id={d._id} key={d._id} type={d._type} />\n        ))}\n\n        <PresentationNavigateProvider setParams={setParams}>\n          <PresentationParamsProvider params={params}>\n            <Container height=\"fill\">\n              <Panels>\n                {navigatorProvided && navigatorEnabled && (\n                  <Navigator {...unstable_navigator} />\n                )}\n                <Panel\n                  id=\"preview\"\n                  minWidth={325}\n                  defaultSize={navigatorEnabled ? 50 : 75}\n                  order={3}\n                >\n                  <Flex direction=\"column\" flex={1} height=\"fill\">\n                    <PreviewFrame\n                      initialUrl={initialPreviewUrl}\n                      navigatorEnabled={navigatorEnabled}\n                      onPathChange={handlePreviewPath}\n                      overlayEnabled={overlayEnabled}\n                      params={params}\n                      perspective={perspective}\n                      ref={iframeRef}\n                      setPerspective={setPerspective}\n                      targetOrigin={targetOrigin}\n                      toggleNavigator={toggleNavigator}\n                      toggleOverlay={toggleOverlay}\n                      loadersConnection={loadersConnection}\n                      overlaysConnection={overlaysConnection}\n                      previewKitConnection={previewKitConnection}\n                    />\n                  </Flex>\n                </Panel>\n                <PanelResizer order={4} />\n                <Panel id=\"content\" minWidth={325} order={5}>\n                  <ContentEditor\n                    refs={documentsOnPage}\n                    deskParams={deskParams}\n                    documentId={params.id}\n                    documentType={params.type}\n                    onDeskParams={handleDeskParams}\n                    onFocusPath={handleFocusPath}\n                    onDocumentChange={onDocumentChange}\n                    previewUrl={params.preview}\n                  />\n                </Panel>\n              </Panels>\n            </Container>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      {channel && (\n        <>\n          <LoaderQueries\n            key=\"published\"\n            activePerspective={perspective === 'published'}\n            channel={channel}\n            liveQueries={liveQueries}\n            perspective=\"published\"\n            // Only send the liveDocument if it's a published document\n            liveDocument={\n              liveDocument?._id?.startsWith('drafts.') ? null : liveDocument\n            }\n          />\n          <LoaderQueries\n            key=\"previewDrafts\"\n            activePerspective={perspective === 'previewDrafts'}\n            channel={channel}\n            liveQueries={liveQueries}\n            perspective=\"previewDrafts\"\n            liveDocument={liveDocument}\n          />\n        </>\n      )}\n    </>\n  )\n}\n","import { ClientPerspective } from '@sanity/client'\nimport { useCallback, useMemo, useState } from 'react'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n  _projectId?: string\n  dataset?: string\n}\n\nexport function useDocumentsOnPage(\n  perspective: ClientPerspective,\n): [\n  DocumentOnPage[],\n  (perspective: ClientPerspective, state: DocumentOnPage[]) => void,\n] {\n  const [state, setState] = useState<\n    Record<ClientPerspective, Map<string, DocumentOnPage>>\n  >(() => ({ published: new Map(), previewDrafts: new Map(), raw: new Map() }))\n\n  const setDocumentsOnPage = useCallback(\n    (perspective: ClientPerspective, documents: DocumentOnPage[]) => {\n      setState((state) => {\n        let changed = false\n        let map = state[perspective]\n        const getKey = (document: DocumentOnPage) => {\n          return `${document._projectId}-${document.dataset}-${document._type}-${document._id}`\n        }\n        const knownKeys = new Set<ReturnType<typeof getKey>>()\n        // Add anything new, and track all keys\n        for (const document of documents) {\n          const key = getKey(document)\n          knownKeys.add(key)\n          if (!map.has(key)) {\n            map.set(key, document)\n            changed = true\n          }\n        }\n        // Remove anything that is no longer on the page\n        for (const key of map.keys()) {\n          if (!knownKeys.has(key)) {\n            map.delete(key)\n            changed = true\n          }\n        }\n\n        if (changed) {\n          map = new Map(map)\n          return { ...state, [perspective]: new Map(map) }\n        }\n\n        return state\n      })\n    },\n    [],\n  )\n\n  const documentsOnPageMap = useMemo(() => {\n    return state[perspective]\n  }, [perspective, state])\n\n  const documentsOnPage = useMemo(() => {\n    return [...documentsOnPageMap.values()]\n  }, [documentsOnPageMap])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport function useLocalState<T>(\n  key: string,\n  defaultValue: T,\n): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n"],"names":["jsxRuntime","require","csm","ui","react","sanity","router","styled","index","desk","isEqual","groqStore","mendoza","icons","withoutSecretSearchParams","framerMotion","isEqual$1","createSecret","definePreviewUrl","suspendReact","_interopDefaultCompat","e","default","styled__default","isEqual__default","isEqual__default$1","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","native","randomUUID","v4","options","buf","offset","rnds","random","arr","unsafeStringify","RESPONSE_TIMEOUT","HEARTBEAT_INTERVAL","HANDSHAKE_INTERVAL","HANDSHAKE_MSG_TYPES","isHandshakeMessage","type","some","t","createChannelsController","config","iframe","frame","contentWindow","channels","connectTo","map","buffer","id","handler","handshakeHandler","status","interval","heartbeat","stopHandshake","channel","window","clearInterval","data","find","from","setChannelStatus","sendHandshake","messageHandler","connectionId","args","onEvent","send","responseTo","handleEvents","origin","domain","to","includes","frameOrigin","isValidMessageEvent","stopHeartbeat","next","onStatusUpdate","uuid","setInterval","startHandshake","heartbeatInverval","startHeartbeat","toFlush","splice","length","forEach","flush","msg","postMessage","targetOrigin","expectResponse","maxWait","setTimeout","removeEventListener","transact","console","warn","eventData","clearTimeout","addEventListener","destroy","Array","isArray","n","r","o","u","s","split","exec","Number","c","_key","alt","ctrl","mod","test","navigator","platform","shift","every","key","toUpperCase","ErrorCard","props","children","message","onRetry","onContinueAnyway","restProps","retryButton","jsx","Button","fontSize","mode","onClick","text","continueAnywayButton","tone","Card","height","Flex","align","justify","Container","padding","sizing","width","jsxs","Stack","space","Text","size","weight","muted","Inline","Box","usePresentationTool","presentation","useContext","PresentationContext","resolveQueryStringFromParams","nextParams","allowed","params","parts","Object","entries","value","join","encodeQueryString","filter","reduce","obj","BackLink","forwardRef","ref","deskParams","StateLink","state","_searchParams","preview","title","ReferenceChildLink","documentId","documentType","path","PresentationPaneRouterProvider","onDeskParams","previewUrl","refs","routerState","resolvePathFromState","useRouter","routerSearchParams","useUnique","fromEntries","createPathWithParams","useCallback","context","useMemo","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","childLinkProps","childId","getPublishedId","_id","_type","ParameterizedLink","Fragment","closeCurrentAndAfter","handleEditReference","replaceCurrent","pane","closeCurrent","duplicateCurrent","setView","viewId","setParams","inspect","setPayload","navigateIntent","intentName","intentParams","PaneRouterContext","Provider","RootLayout","PaneLayout","Root","WrappedCode","Code","DocumentListPane","devMode","ids","schemaTypeName","errorParams","setErrorParams","useState","handleRetry","useEffect","flex","overflow","radius","Label","error","ErrorBoundary","onCatch","DeskToolProvider","direction","DeskDocumentListPane","itemId","paneKey","DocumentListPanel","DocumentPane","onFocusPath","paneDocumentNode","setLayoutCollapsed","useDeskTool","handleRootCollapse","handleRootExpand","style","onExpand","onCollapse","DeskDocumentPane","DocumentPanel","onDocumentChange","editState","useEditState","documentValue","draft","published","handleFocusPath","ContentEditor","document","defineListenerContext","createContext","IsEnabledContext","warnedAboutCrossDatasetReference","turboChargeResultIfSourceMap","liveDocument","projectId","dataset","result","perspective","resultSourceMap","applySourceDocuments","sourceDocument","_projectId","unstable__getDocumentCacheKey","unstable__documentsCache","get","getQueryCacheKey","query","JSON","stringify","LiveStoreProvider","memo","client","refreshInterval","subscriptions","setSubscriptions","snapshots","Map","hooks","cache","subscribe","listener","has","set","listeners","Set","prevSubscriptions","hook","TypeError","add","delete","sub","useHooks","initialSnapshot","onStoreChange","unsubscribe","getSnapshot","turboIds","setTurboIds","turboIdsFromSourceMap","contentSourceMap","nextTurboIds","documents","prevTurboIds","mergedTurboIds","sort","Context","Turbo","QuerySubscription","displayName","LiveStoreProvider$1","setError","revalidate","startRefresh","onLine","e4","n2","visibilityState","d","f","e3","useRevalidate","shouldRefetch","fulfilled","controller","AbortController","onFinally","async","signal","fetch","tag","filterResponse","aborted","values","effect","catch","name","finally","abort","snapshot","nextTurboIdsSnapshot","batch","setBatch","batchSet","flat","nextBatch","turboId","nextBatchSlice","prevBatch","lastMutatedDocumentId","setLastMutatedDocumentId","subscription","listen","events","effectFormat","includePreviousRevision","includeResult","update","effects","apply","cachedDocument","peek","patchDoc","_rev","patchedDocument","applyPatch","updatedKeys","updatedKey","lastDraftDocumentRev","setLastDraftDocumentRev","GetDocuments","missingIds","getDocuments","then","doc","useLiveQuery","initialData","queryParams2","defineStore","queryParams","parse","useQueryParams","store","serverSnapshot","getServerSnapshot","useSyncExternalStore","LoaderQueries","activePerspective","liveQueries","studioClient","useClient","apiVersion","clientConfig","withConfig","prevResult","useRef","prevResultSourceMap","current","PanelsContext","div","Panel","defaultSize","minWidth","maxWidth","order","getPanelStyle","registerElement","unregisterElement","useLayoutEffect","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","el","usePanelId","activeResizer","drag","startDragging","stopDragging","isDragging","onMouseDown","event","nativeEvent","onDrag","onDragStop","blur","debounce","fn","timeout","timer","itemKey","getStoredItem","localStorage","getItem","getKeyForPanels","panels","panel","usePanelsStorage","widths","setItem","setStoredItem","setDebounced","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getPanelWidth","findIndex","toPrecision","getOffset","handleElement","initialOffset","initialHandleElementRect","clientX","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","a","b","validateWidths","widthsToValidate","total","remainingWidth","toFixed","abs","PanelsWrapper","Panels","panelsEl","setElements","setWidths","setActiveResizer","panelsRef","flexGrow","pointerEvents","prev","dragRef","innerWidth","dragOffset","panelAfter","panelBefore","resizerIndex","resizerRect","startX","elementsArr","resizer","resizeElement","acc","pageX","preventDefault","stopPropagation","prevWidths","nextWidths","delta","panelsState","initialDragState","initialWidths","pivotPanel","deltaApplied","localeCompare","numeric","getNextWidths","widthsChanged","prevWidth","storage","storedWidths","validatedStoredWidths","defaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","getDefaultWidths","resizeObserver","ResizeObserver","observe","disconnect","HoldEditState","PresentationNavigateProvider","navigate","PresentationNavigateContext","PresentationParamsProvider","PresentationParamsContext","PresentationProvider","IFrame","motion","PreviewLocationInput","basePath","useActiveWorkspace","activeWorkspace","onChange","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","currentTarget","handleKeyDown","absoluteValue","startsWith","nextValue","handleBlur","resetButton","icon","ResetIcon","TextInput","clearButton","onBlur","onClear","onKeyDownCapture","zIndex","suffix","lineHeight","as","href","LaunchIcon","rel","target","MotionFlex","StyledSwitch","Switch","PERSPECTIVE_TITLES","previewDrafts","raw","PERSPECTIVE_TONES","PERSPECTIVE_ICONS","EditIcon","PublishIcon","DatabaseIcon","PreviewFrame","initialUrl","navigatorEnabled","onPathChange","overlayEnabled","setPerspective","toggleNavigator","toggleOverlay","loadersConnection","overlaysConnection","previewKitConnection","setMode","prefersReducedMotion","usePrefersReducedMotion","setDesktopMode","setMobileMode","loading","setLoading","timedOut","setTimedOut","refreshing","setRefreshing","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","previewLocationOrigin","location","handleRefresh","src","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","M","previewLocationRoute","URL","pathname","search","onIFrameLoad","MotionConfig","transition","duration","TooltipDelayGroupProvider","delay","shadow","position","gap","minHeight","Tooltip","content","fallbackPlacements","placement","portal","PanelLeftIcon","selected","whiteSpace","borderRadius","userSelect","margin","checked","RefreshIcon","MenuButton","button","iconRight","ChevronDownIcon","menu","Menu","MenuItem","pressed","createElement","opacity","CheckmarkIcon","popover","constrainSize","DesktopIcon","MobileDeviceIcon","cursor","AnimatePresence","initial","animate","exit","variants","errorVariants","background","inset","borderTop","boxShadow","spinnerVariants","sizes","Spinner","backdropFilter","iframeVariants","onLoad","desktop","mobile","scale","idle","reloading","active","parsePath","rawPath","segments","studioPath","urlStringToPath","pruneObject","useParams","initialPreviewUrl","routerNavigate","setParamsState","decodeURIComponent","rev","since","template","view","pathKey","instruction","comment","newParams","nextState","previewRef","previousPreview","pathToUrlString","fromString","Boolean","searchParams","replace","usePreviewUrl","toolName","previewSearchParam","API_VERSION","workspace","deps","workspaceName","currentUser","useCurrentUser","resolveUUID","useSuspendCacheKeys","previewUrlSecret","enabled","secretLastExpiredAt","setSecretLastExpiredAt","suspend","createPreviewSecret","startTransition","expiresAt","getTime","Date","now","secret","usePreviewUrlSecret","resolvedUrl","resultUrl","restoredUrl","referrer","referrerUrl","resolvePreviewUrl","studioBasePath","Symbol","Navigator","component","NavigatorComponent","navigatorDisabled","exports","_previewUrl","components","tool","DEFAULT_TOOL_NAME","unstable_navigator","option","hostname","iframeRef","setChannel","setLiveQueries","documentsOnPage","setDocumentsOnPage","setState","changed","getKey","knownKeys","keys","perspective2","documentsOnPageMap","useDocumentsOnPage","setOverlayEnabled","navigatorProvided","setNavigatorEnabled","defaultValue","setValue","useLocalState","useProjectId","useDataset","idRef","preloadRefs","setPreloadRefs","p","concat","setOverlaysConnection","setLoadersConnection","setPreviewKitConnection","nextChannel","url","isInitialNavigation","nextDocumentId","nextPath","handlePreviewPath","handleDeskParams","setLiveDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}